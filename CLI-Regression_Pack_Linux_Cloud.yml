# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml


trigger:
- none

pool:
  vmImage: ubuntu-latest
 

variables:
- name: UiPath.CLI.UiPath.CLI.23.2.0-dev
  value: CLI/UiPath.CLI.23.2.0-dev/tools/uipcli.dll

- name: Staging_Orchestrator_Addresse
  value: https://staging.uipath.com

- name: Staging_Orchestrator_Folder
  value: Modern Folder

- name: Staging_Orchestrator_Tenant
  value: DefaultTenant

- name: Staging_Orchestrator_Organization
  value: testsuite

- name: Staging_Orchestrator_AppId
  value: f77ad440-af8b-491c-a93a-d907e8a7fc69

- name: Staging_Orchestrator_AppSecret
  value: S(N?g@M?lfUV3@Ts

- name: Application_Scopes
  value: OR.Monitoring OR.Folders OR.BackgroundTasks OR.TestSets OR.TestSetExecutions OR.TestSetSchedules OR.Settings OR.Robots OR.Machines OR.Execution OR.Assets OR.Users OR.Jobs


steps:

- task: Bash@3
  displayName: 'Pack Process XPlatform UiPath.CLI.UiPath.CLI.23.2.0-dev'
  inputs:
    targetType: 'inline'
    script: |
     dotnet "$(Build.SourcesDirectory)/$(UiPath.CLI.UiPath.CLI.23.2.0-dev)" package pack "$(Build.SourcesDirectory)/Projects\Process_XPlatform_23.4\project.json" -o "$(System.DefaultWorkingDirectory)" --autoVersion --outputType Process --libraryOrchestratorAccountForApp "$(Staging_Orchestrator_Organization)" --libraryOrchestratorApplicationId "$(Staging_Orchestrator_AppId)" --libraryOrchestratorApplicationSecret "$(Staging_Orchestrator_AppSecret)" --libraryOrchestratorApplicationScope "$(Application_Scopes)" --libraryOrchestratorUrl "$(Staging_Orchestrator_Addresse)" --libraryOrchestratorFolder "$(Staging_Orchestrator_Folder)" --libraryOrchestratorTenant "$(Staging_Orchestrator_Tenant)" --traceLevel "Verbose"


- task: PowerShell@2
  displayName: 'Pack Library XPlatform UiPath.CLI.23.2.0-windows-dev'
  continueOnError: true
  inputs:
    targetType: 'inline'
    script: |
      $(Build.SourcesDirectory)\$(UiPath.CLI.23.2.0-windows-dev) package pack "$(Build.SourcesDirectory)\Projects\Library_XPlatform_23.4\project.json" -o "$(System.DefaultWorkingDirectory)" --autoVersion --outputType Library --libraryOrchestratorAccountForApp '$(Staging_Orchestrator_Organization)' --libraryOrchestratorApplicationId '$(Staging_Orchestrator_AppId)' --libraryOrchestratorApplicationSecret '$(Staging_Orchestrator_AppSecret)' --libraryOrchestratorApplicationScope '$(Application_Scopes)' --libraryOrchestratorUrl '$(Staging_Orchestrator_Addresse)' --libraryOrchestratorFolder '$(Staging_Orchestrator_Folder)' --libraryOrchestratorTenant '$(Staging_Orchestrator_Tenant)' --traceLevel "Verbose"


- task: PowerShell@2
  displayName: 'Pack Test XPlatform UiPath.CLI.23.2.0-windows-dev'
  continueOnError: true
  inputs:
    targetType: 'inline'
    script: |
      $(Build.SourcesDirectory)\$(UiPath.CLI.23.2.0-windows-dev) package pack "$(Build.SourcesDirectory)\Projects\Test_XPlatform_23.4\project.json" -o "$(System.DefaultWorkingDirectory)" --autoVersion --outputType Tests --libraryOrchestratorAccountForApp '$(Staging_Orchestrator_Organization)' --libraryOrchestratorApplicationId '$(Staging_Orchestrator_AppId)' --libraryOrchestratorApplicationSecret '$(Staging_Orchestrator_AppSecret)' --libraryOrchestratorApplicationScope '$(Application_Scopes)' --libraryOrchestratorUrl '$(Staging_Orchestrator_Addresse)' --libraryOrchestratorFolder '$(Staging_Orchestrator_Folder)' --libraryOrchestratorTenant '$(Staging_Orchestrator_Tenant)'  --traceLevel "Verbose"
